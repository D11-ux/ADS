import matplotlib.pyplot as plt
from sklearn.datasets import make_classification
from imblearn.over_sampling import SMOTE
from collections import Counter

# 1. Create a synthetic imbalanced dataset
X, y = make_classification(n_samples=200, n_features=2, n_informative=2, 
                           n_redundant=0, n_clusters_per_class=1,
                           weights=[0.9, 0.1], flip_y=0, random_state=1)

# 2. Show original class distribution
print("Original class distribution:", Counter(y))

# 3. Plot before SMOTE
plt.figure(figsize=(10, 4))
plt.subplot(1, 2, 1)
plt.title("Before SMOTE")
plt.scatter(X[:, 0], X[:, 1], c=y, cmap='coolwarm', edgecolor='k')
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")

# 4. Apply SMOTE
smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X, y)

# 5. Show new class distribution
print("Resampled class distribution:", Counter(y_resampled))

# 6. Plot after SMOTE
plt.subplot(1, 2, 2)
plt.title("After SMOTE")
plt.scatter(X_resampled[:, 0], X_resampled[:, 1], c=y_resampled, cmap='coolwarm', edgecolor='k')
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")

plt.tight_layout()
plt.show()
